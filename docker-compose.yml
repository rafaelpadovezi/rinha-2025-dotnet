services:
  api1: &api1
    hostname: api1
    build: ./src
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      ConnectionStrings__Postgres: Host=postgres;Port=5432;Database=rinha;Username=postgres;Password=postgres;Minimum Pool Size=5;Maximum Pool Size=20;Connection Pruning Interval=3;Max Auto Prepare=10;Auto Prepare Min Usages=1;
      PaymentProcessorDefault__BaseUrl: http://payment-processor-default:8080
      PaymentProcessorFallback__BaseUrl: http://payment-processor-fallback:8080
    networks:
      - backend
      - payment-processor
    deploy:
      resources:
        limits:
          cpus: "0.35"
          memory: "100MB"
  
  api2:
    <<: *api1
    hostname: api2
    user: root
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      ConnectionStrings__Postgres: Host=postgres;Port=5432;Database=rinha;Username=postgres;Password=postgres;Minimum Pool Size=5;Maximum Pool Size=20;Connection Pruning Interval=3;Max Auto Prepare=10;Auto Prepare Min Usages=1;
      PaymentProcessorDefault__BaseUrl: http://payment-processor-default:8080
      PaymentProcessorFallback__BaseUrl: http://payment-processor-fallback:8080
      DOTNET_DiagnosticPorts: /diag/dotnet-monitor2.sock
    volumes:
      - "./diag:/diag"
    networks:
      - backend
      - payment-processor
  monitor2:
    user: root
    image: mcr.microsoft.com/dotnet/monitor:9
    environment:
      DOTNETMONITOR_Storage__DefaultSharedPath: /diag
      DOTNETMONITOR_Metrics__Endpoints: http://+:52325
      DOTNETMONITOR_Urls: http://+:52323
      DOTNETMONITOR_DiagnosticPort__ConnectionMode: listen
      DOTNETMONITOR_DiagnosticPort__EndpointName: /diag/dotnet-monitor2.sock
      Logging__LogLevel__Default: Warning
      Logging__LogLevel__Microsoft.Diagnostics: Warning
      Logging__LogLevel__Microsoft.Hosting.Lifetime: Warning
    depends_on:
      - api2
    command: [ "collect", "--no-auth" ]
    volumes:
      - "./diag:/diag"
    ports:
      - "52323:52323"
      - "52325:52325"
    networks:
      - backend

  postgres:
    image: postgres:17-alpine
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=rinha
    ports:
      - "5432:5432"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d rinha" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    depends_on:
      - pgadmin
    networks:
      - backend
    deploy:
      resources:
        limits:
          cpus: "0.25"
          memory: "130MB"
  pgadmin:
    image: dpage/pgadmin4
    networks:
      - backend
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: "rafaelpadovezi@gmail.com"
      PGADMIN_DEFAULT_PASSWORD: "admin"
  
  nginx:
    image: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2
    ports:
      - "9999:9999"
    networks:
      - backend
    deploy:
      resources:
        limits:
          cpus: "0.20"
          memory: "20MB"

networks:
  backend:
    name: backend
    driver: bridge
  payment-processor:
    external: true